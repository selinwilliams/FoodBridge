"""Initial migration

Revision ID: 900673fd6fc4
Revises: 
Create Date: 2025-01-16 22:18:54.995256

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '900673fd6fc4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('distribution_centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('operating_hours', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('capacity_limit', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('distribution_centers', schema=None) as batch_op:
        batch_op.create_index('idx_lat_long', ['latitude', 'longitude'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('user_type', sa.Enum('PROVIDER', 'RECIPIENT', 'ADMIN', name='usertype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('business_name', sa.String(length=100), nullable=False),
    sa.Column('business_type', sa.Enum('RESTAURANT', 'GROCERY', 'BAKERY', 'CAFE', 'FARM', 'OTHER', name='businesstype'), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_listings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('distribution_center_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('food_type', sa.Enum('PRODUCE', 'DAIRY', 'BAKERY', 'MEAT', 'PANTRY', 'PREPARED', 'OTHER', name='foodtype'), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('original_price', sa.Float(), nullable=True),
    sa.Column('discounted_price', sa.Float(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=False),
    sa.Column('best_by_date', sa.DateTime(), nullable=True),
    sa.Column('pickup_window_start', sa.DateTime(), nullable=False),
    sa.Column('pickup_window_end', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'AVAILABLE', 'RESERVED', 'COMPLETED', 'EXPIRED', 'CANCELLED', name='foodstatus'), nullable=True),
    sa.Column('allergens', sa.JSON(), nullable=True),
    sa.Column('storage_instructions', sa.Text(), nullable=True),
    sa.Column('handling_instructions', sa.Text(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('temperature_requirements', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['distribution_center_id'], ['distribution_centers.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('pickup_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'EXPIRED', name='reservationstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('quantity_reserved', sa.Integer(), nullable=False),
    sa.Column('expiration_time', sa.DateTime(), nullable=False),
    sa.Column('pickup_window_start', sa.DateTime(), nullable=False),
    sa.Column('pickup_window_end', sa.DateTime(), nullable=False),
    sa.Column('actual_pickup_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['listing_id'], ['food_listings.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservations')
    op.drop_table('food_listings')
    op.drop_table('providers')
    op.drop_table('users')
    with op.batch_alter_table('distribution_centers', schema=None) as batch_op:
        batch_op.drop_index('idx_lat_long')

    op.drop_table('distribution_centers')
    # ### end Alembic commands ###
